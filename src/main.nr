use dep::std::ecdsa_secp256k1;

fn main(hashed_message : [u8;32], pub_key_x : [u8;32], pub_key_y : [u8;32], signature : [u8;64]) {
     let valid_signature = ecdsa_secp256k1::verify_signature(pub_key_x, pub_key_y, signature, hashed_message);
     assert(valid_signature);
}

#[test]
fn test_main() {
    // x + y of hardhat 0 address:
    // private key = ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
    // pub key = 0x8318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5
    // keccak of pub key = 0xc1ffd3cfee2d9e5cd67643f8f39fd6e51aad88f6f4ce6ab8827279cfffb92266
    // addr (right most 20 bytes) 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266
    let pub_key_x = [131,24,83,91,84,16,93,74,122,174,96,192,143,196,95,150,135,24,27,79,223,198,37,189,26,117,63,167,57,127,237,117];
    let pub_key_y = [53,71,241,28,168,105,102,70,242,243,172,176,142,49,1,106,250,194,62,99,12,93,17,245,159,97,254,245,123,13,42,165];
    let signature = [57,17,112,239,241,30,64,157,170,50,85,145,156,69,226,85,147,164,10,82,71,93,42,132,200,220,161,255,95,241,211,141,81,7,150,25,25,27,162,213,80,61,12,170,50,4,154,203,252,229,119,29,202,153,50,25,126,145,245,23,136,75,29,177];
    let hashed_message = [13,82,120,60,76,186,215,235,175,126,185,67,252,100,143,82,130,165,32,112,68,47,193,141,141,209,109,219,47,203,175,102]; // hi

    main(hashed_message, pub_key_x, pub_key_y, signature);
}
